| 或运算，匹配任意一个表达式即可
. 匹配任意单个字符，换行除外
^ 开始界定  类似 startWith;
    如果用在中括号中且在字符之前表示排除，[^a-z]表示非a-z的字符，
    在字符之后表示界定，[a-z^]表示a-z之间的任意字符
\序号　表示子组对应的字符串的重复次数(重复次数最大只能是99)；如果以0开始或者为３位数(最大为177)表示八进制对应的ａｓｃｉｉ码对应的值
    如\141 表示 a  (ab)\141 表示匹配aba
() 标记一个子表达式,(aspire)\1 表示匹配aspireaspire
$开始界定  类似 endWith
() 表示一个字符串整体eg (aspire) 表示需要匹配aspire
[] 表示范围 [a-z]表示所有的小写字母[\s*]表示空格或者* 字符写在中括号里面以后就将变成普通的字符
    如[.]  表示匹配 . 相当于 \.
{m,n} 表示匹配长度（重复次数）eg: ab{1,3} 可以匹配 ab, abb, abbb
* 相当于{0,}
+ 相当于{1,}
? 相当于{0,1}
\A 相当于 ^的开始界定
\Z 相当于 $ 表示结束界定
\b 单词边界，下划线，数字会被认为是一个单词 eg: \baspire\b 可以匹配 aspire.com 但是不可以匹配aspirecn.com 和aspire_.com
\B 与\b相反，非单词边际
\d 匹配数字
\D 与\d相反，匹配非数字
\s 匹配具有换行，空白的字符
\S 匹配非换行，空白字符
\w 匹配所有字符数字下划线
\W 匹配非字符数字下划线
(?P=name) 引⽤别名为name分组匹配到的字符串
(?P<name>) 分组起别名
    ret = re.match(r"<(?P<name1>\w*)><(?P<name2>\w*)>.*</(?P=name
2)></(?P=name1)>", "<html><h1>www.itcast.cn</h1></html>")
ret.group()

正则表达式只使用一次就使用一个模块方法，如果需要多次使用可以先进行编译后再使用,例如
p = re.compile(r'(aspire)')
p.search('aspire to inspire')