linux 内核 源码http://www.kernel.org
Linux ⽬录
    /：根⽬录
    /bin、/usr/bin: 可执⾏⼆进制⽂件的⽬录，如常⽤的命令ls、tar、mv、cat等。
    /boot：放置linux系统启动时⽤到的⼀些⽂件，如Linux的内核⽂件：/boot/vmlinuz系统引导管理器：/boot/grub。
    /dev：存放linux系统下的设备⽂件，访问该⽬录下某个⽂件，相当于访问某个设备，常⽤的是挂载光驱 mount /dev/cdrom /mnt。
    /etc：系统配置⽂件存放的⽬录，不建议在此⽬录下存放可执⾏⽂件，重要的配置⽂ 件有 /etc/inittab、/etc/fstab、/etc/init.d、/etc/X11、/etc/sysconfig、/etc/xinetd.d。
    /home
   /lib、/usr/lib、/usr/local/lib：系统使⽤的函数库的⽬录，程序在执⾏过程中，需要调⽤⼀些额外的参数时需要函数库的协助
   /lost+fount：系统异常产⽣错误时，会将⼀些遗失的⽚段放置于此⽬录下。'
   mnt: /media：光盘默认挂载点，通常光盘挂载于 /mnt/cdrom 下，也不⼀定，可以选择任意位置进⾏挂载
   /opt：给主机额外安装软件所摆放的⽬录。
   /proc：此⽬录的数据都在内存中，如系统核⼼，外部设备，⽹络状态，由于数据都存放于内存中，所以不占⽤磁盘空间，⽐较重要的⽬录有
            /proc/cpuinfo、/proc/interrupts、/proc/dma、/proc/ioports、/proc/net/* 等。
   /root：系统管理员root的家⽬录。
   /sbin、/usr/sbin、/usr/local/sbin：放置系统管理员使⽤的可执⾏命令，如fdisk、
            shutdown、mount 等。与 /bin 不同的是，这⼏个⽬录是给系统管理员 root使⽤的命
                令，⼀般⽤户只能"查看"⽽不能设置和使⽤。
    /tmp：⼀般⽤户或正在执⾏的程序临时存放⽂件的⽬录，任何⼈都可以访问，重要数
据不可放置在此⽬录下
    /srv：服务启动之后需要访问的数据⽬录，如 www 服务需要访问的⽹⻚数据存放在/srv/www 内。
    /usr：应⽤程序存放⽬录，/usr/bin 存放应⽤程序，/usr/share 存放共享数据，/usr/lib
            存放不能直接运⾏的，却是许多程序运⾏所必需的⼀些函数库⽂件。/usr/local: 存放
            软件升级包。/usr/share/doc: 系统说明⽂件存放⽬录。/usr/share/man: 程序说明⽂件
            存放⽬录。
    /var：放置系统执⾏过程中经常变化的⽂件，如随时更改的⽇志⽂件
            /var/log，/var/log/message：所有的登录⽂件存放⽬录，/var/spool/mail：邮件存放
            的⽬录，/var/run:程序或服务启动后，其PID存放在该⽬录下。


硬链接
ln  源文件  链接文件
软链接（快捷方式）
ln -s   源文件  链接文件


find 命令 使用
find ./ -name test.sh 查找当前⽬录下所有名为test.sh的⽂件
find ./ -name '*.sh' 查找当前⽬录下所有后缀为.sh的⽂件
find ./ -name "[A-Z]*" 查找当前⽬录下所有以⼤写字⺟开头的⽂件
find /tmp -size 2M 查找在/tmp ⽬录下等于2M的⽂件
find /tmp -size +2M 查找在/tmp ⽬录下⼤于2M的⽂件
find /tmp -size -2M 查找在/tmp ⽬录下⼩于2M的⽂件
find ./ -size +4k -size -5M 查找当前⽬录下⼤于4k，⼩于5M的⽂件
find ./ -perm 777 查找当前⽬录下权限为 777 的⽂件或⽬录


ping
ifconfig
du
df
cat
date '+%Y%m%d%H%M%S'
kill
top
ps
grep
find
whoami
who
exit
useradd -d /opt/sunke -m -g test
userdel -f sunke
usermod -g test1 sunke
chmod u/g/o/a +-= rwx  (r=4,w=2,x=1,0什么都没有)
chown
chgrp 修改文件所属组


cal 查看日历

（date '+%y,%m,%d,%H,%M,%S'）：

vim基础操作
vim是从 vi 发展出来的一个文本编辑器 。代码补完、编译及错误跳转等方便编程的功能特别丰富
进入插入模式:
i: 插入光标前一个字符



I
I: 插入行首



a
a: 插入光标后一个字符



A
A: 插入行未



o
o: 向下新开一行,插入行首



O
O: 向上新开一行,插入行首


进入命令模式:
ESC:从插入模式或末行模式进入命令模式
移动光标:
h: 左移



j
j: 下移



k
k: 上移



l
l: 右移



M
M: 光标移动到中间行



L
L: 光标移动到屏幕最后一行行首



G
G: 移动到指定行,行号 -G



w
w: 向后一次移动一个字



b
b: 向前一次移动一个字



{
{: 按段移动,上移



}
}: 按段移动,下移



C
Ctr-d: 向下翻半屏



C
Ctr-u: 向上翻半屏



C
Ctr-f: 向下翻一屏



C
Ctr-b: 向上翻一屏



g
gg: 光标移动文件开头



G
G: 光标移动到文件末尾


删除命令:
x: 删除光标后一个字符,相当于 Del



X
X: 删除光标前一个字符,相当于 Backspace



d
dd: 删除光标所在行,n dd 删除指定的行数 D: 删除光标后本行所有内容,包含光标所在字符



d
d0: 删除光标前本行所有内容,不包含光标所在字符



d
dw: 删除光标开始位置的字,包含光标所在字符


撤销命令:
u: 一步一步撤销




C
Ctr-r: 反撤销


重复命令:
.: 重复上一次操作的命令


文本行移动:
>>: 文本行右移



<
<<: 文本行左移


复制粘贴:
yy: 复制当前行,n yy 复制 n 行



p
p: 在光标所在位置向下新开辟一行,粘贴


可视模式:
v: 按字符移动,选中文本



V
V: 按行移动,选中文本可视模式可以配合 d, y, >>, << 实现对文本块的删除,复制,左右移动


替换操作:
r: 替换当前字符



R
R: 替换当前行光标后的字符


查找命令:
/: str查找
n
n: 下一个
N
N：上一个


替换命令：
把abc全部替换成123
末行模式下，将当前文件中的所有abc替换成123
:
:%s/abc/123/g



�
末行模式下，将第一行至第10行之间的abc替换成123
:
:1, 10s/abc/123/g


vim里执行 shell 下命令:
末行模式里输入!,后面跟命令